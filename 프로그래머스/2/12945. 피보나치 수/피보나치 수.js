function solution(n) {
    // 이미 구한 피보나치 값을 메모해둘 배열 생성 (dp: 동적계획법) 
    let dp = new Array(n+1) // 기존 값에 더하는 작업이 없기 때문에 0으로 초기화해주지 않아도 됨
    
    // n은 2이상의 값이 들어오기 때문에 이전 값을 저장해준다.
    dp[0] = 0
    dp[1] = 1
    dp[2] = 1
  
    // 재귀로 풀면 마지막 두 테케에서 런타임에러가 나온다. (재귀 깊이 이슈)
    // 따라서 반복문으로 풀어야 함
    for(let i=3; i<=n; i++) {
        dp[i] = (dp[i-1] + dp[i-2]) % 1234567; // 저장할 때부터 나머지 값으로 저장해준다.
    }
    
    return dp[n]
}